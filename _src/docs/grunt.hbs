---
layout: "documentation.hbs"
title: "Browsersync + Grunt.js"
sidebar: "grunt-sidebar.hbs"
markdown: false
---

{{#md}}
We have an [official Plugin]({{site.links.grunt-github}}) for Grunt that makes it easy to incorporate
Browsersync into your development workflow. Below are a few examples of common configurations to get you started - use them
as a jump-start but don't forget you can also use any of the other [Browsersync options]({{site.links.options}}) as well.
{{/md}}

{{ inc src="headerlink.html" title="Install" slug="grunt-install" }}

{{#md}}First, you'll need to install the Browsersync Plugin...{{/md}}

{{ hl src="snippets/grunt/install.txt" lang="html" }}

{{#md}}... and then add this line to your `Gruntfile.js`{{/md}}

{{#hl lang="js"}}
grunt.loadNpmTasks('grunt-browser-sync');
{{/hl}}

{{ inc src="headerlink.html" title="Static File Server" slug="grunt-server" }}

{{#md}}
The simplest example would be watching CSS files and using the built-in server for static
HTML/CSS/JS files. This config alone will launch a mini-server (using your current working directory
as the base), watch your CSS files for changes & auto-inject those changes into all connected browsers.
{{/md}}

{{ hl src="snippets/grunt/server.simple.js" }}

{{ inc src="headerlink.html" title="Proxy" slug="grunt-proxy" }}

{{#md}}
If you already have a local server setup (with your vhosts etc), just tell Browsersync all about it & it will do the rest for you.
{{/md}}

{{ hl src="snippets/grunt/proxy.js" }}

{{ inc src="headerlink.html" title="+ other watch tasks" slug="grunt-watch" }}

{{#md}}
Browser Sync is not a replacement for regular `watch` tasks (such as compiling SASS, LESS etc),
they are designed to be used together. If you intend to do this, you'll need to set `watchTask: true` and be sure to call
the watch task AFTER browserSync. For example, to compile SASS and then inject the CSS into all open browsers
(without a page refresh), your config for all three tasks might look something like this:
{{/md}}

{{ hl src="snippets/grunt/full.watch.js" }}
